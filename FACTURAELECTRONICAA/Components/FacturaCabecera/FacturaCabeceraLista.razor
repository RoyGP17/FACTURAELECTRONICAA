@rendermode InteractiveServer
@page "/facturas"
@using Microsoft.EntityFrameworkCore
@using FACTURAELECTRONICAA.Models
@inject BdFacturaContext _context
@inject NavigationManager navigationManager

<h3>Lista de Facturas</h3>

<button class="btn btn-primary" @onclick="NuevaFactura">Nueva Factura</button>

<table class="table">
    <thead>
        <tr>
            <th>Número Factura</th>
            <th>RUC</th>
            <th>Razón Social</th>
            <th>Fecha de Emisión</th>
            <th>Tipo de Moneda</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var factura in facturas)
        {
            <tr>
                <td><a href="facturasdetalle?idfactura=@factura.NumeroFactura">@factura.NumeroFactura</a></td>
                <td>@factura.Ruc</td>
                <td>@factura.RazonSocial</td>
                <td>@factura.FechaEmision.ToString("dd/MM/yyyy")</td>
                <td>@factura.TipoMoneda</td>
                <td>
                    <button class="btn btn-warning" @onclick="() => EditarFactura(factura.FacturaId)">Editar</button>
                    <button class="btn btn-danger" @onclick="() => EliminarFactura(factura.FacturaId)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<FacturaCabecera> facturas = new();

    protected override async Task OnInitializedAsync()
    {
        facturas = await _context.FacturaCabeceras.ToListAsync();
    }

    void NuevaFactura()
    {
        navigationManager.NavigateTo("/facturaform");
    }

    void EditarFactura(int id)
    {
        navigationManager.NavigateTo($"/facturaform/{id}");
    }

    async Task EliminarFactura(int id)
    {
        var factura = await _context.FacturaCabeceras.FindAsync(id);
        if (factura != null)
        {
            _context.FacturaCabeceras.Remove(factura);
            await _context.SaveChangesAsync();
            facturas = await _context.FacturaCabeceras.ToListAsync();
        }
    }
}
